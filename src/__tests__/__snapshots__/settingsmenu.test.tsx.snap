// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SettingsMenu /> renders all elements in correct order (snapshot) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SettingsMenu />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Blueprint3.MenuItem
          disabled={false}
          multiline={false}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Item 1"
        />,
        <Blueprint3.MenuItem
          disabled={false}
          multiline={false}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Item 2"
        />,
        <Blueprint3.MenuItem
          disabled={false}
          multiline={false}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Item 3"
        />,
        <Blueprint3.MenuDivider />,
        <Connect(LayoutContainer)>
          [Function]
        </Connect(LayoutContainer)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "multiline": false,
          "popoverProps": Object {},
          "shouldDismissPopover": true,
          "text": "Item 1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "multiline": false,
          "popoverProps": Object {},
          "shouldDismissPopover": true,
          "text": "Item 2",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "multiline": false,
          "popoverProps": Object {},
          "shouldDismissPopover": true,
          "text": "Item 3",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": [Function],
        },
        "ref": null,
        "rendered": [Function],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Blueprint3.MenuItem
            disabled={false}
            multiline={false}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Item 1"
          />,
          <Blueprint3.MenuItem
            disabled={false}
            multiline={false}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Item 2"
          />,
          <Blueprint3.MenuItem
            disabled={false}
            multiline={false}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Item 3"
          />,
          <Blueprint3.MenuDivider />,
          <Connect(LayoutContainer)>
            [Function]
          </Connect(LayoutContainer)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "multiline": false,
            "popoverProps": Object {},
            "shouldDismissPopover": true,
            "text": "Item 1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "multiline": false,
            "popoverProps": Object {},
            "shouldDismissPopover": true,
            "text": "Item 2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "multiline": false,
            "popoverProps": Object {},
            "shouldDismissPopover": true,
            "text": "Item 3",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
